<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefined2020/01/14/hello-world/"/>
    <url>2020/01/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>A simple test markdown file for first article on my blog.</p><a id="more"></a><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><pre class="highlight"><code class="bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><pre class="highlight"><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><pre class="highlight"><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><pre class="highlight"><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hello World</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Hexo个人博客</title>
    <link href="undefined2019/11/26/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>2019/11/26/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>完全小白的搭建Hexo指引，顺带安利Fluid主题</p><a id="more"></a><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>Hexo个人博客是基于 <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a>的解决方案，基本优势除了省了服务器费用外，还可以拥有免费域名，这就省下很多事；而相比Hexo以外的博客系统，因为我个人了解不深，所以如果需要了解更多内容，可以自行<a href="www.google.com">google</a>。那么这里就直接开始。</p><p>注：本指引在 <code>win 10</code>上完成，其他操作系统中可能部分步骤并不适用。</p><h1 id="搭建部分"><a class="markdownIt-Anchor" href="#搭建部分"></a> 搭建部分</h1><h2 id="创建-github-pages-仓库"><a class="markdownIt-Anchor" href="#创建-github-pages-仓库"></a> 创建 GitHub Pages 仓库</h2><p>在GitHub创建名称为 <code>yourname.github.io</code> 的 repository（需要指定为 <code>public</code>)，此处的 <code>yourname</code> 需要与你的 <code>GitHub ID</code>一致（大小写），其他诸如项目描述等不重要信息可随意填写，创建完成后即可v有如下仓库，个人图片示例</p><p><img src="/img/blog_img/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/repo_sample.png" srcset="undefined" alt="创建完成示例" /></p><h2 id="添加本地ssh-key到github"><a class="markdownIt-Anchor" href="#添加本地ssh-key到github"></a> 添加本地SSH Key到GitHub</h2><p>执行此步骤前，请确认电脑上已经安装Git，若不能确定是否安装，可直接命令行运行 <code>git --version</code>，若正常输出Git 版本信息如下则已正确安装，若无则请安装Git并确认环境变量。</p><pre class="highlight"><code class="console">C:\Users\paco&gt;git --versiongit version 2.22.0.windows.1</code></pre><p>使用命令行，或直接使用 <code>Git bash</code>，使用如下命令:</p><pre class="highlight"><code class="console">git config --global user.name &lt;your user name&gt;git config --global user.email &lt;your email&gt;ssh-keygen -t rsa -C "&lt;your email&gt;"</code></pre><p>使用你的<code>GitHub ID</code>替换命令中的<code>&lt;your user name&gt;</code>，使用你的邮箱（注册GitHub的那个）替换命令中的 <code>&lt;your email&gt;</code>，最后一条命令执行后会有一些确认选项，若无特殊需求，直接全部 <code>enter</code>，让它自己使用默认项。</p><p>默认将生成的Key文件存储在用户目录下，也就是  <code>C:\Users\paco\.ssh\</code> 文件夹中，其中的 <code>id_rsa.pub</code> 文件就为我们需要的文件。</p><p>登录 GitHub，点击自己的头像，选择  <a href="https://github.com/settings/profile" target="_blank" rel="noopener">Settings</a>，在设置页面内选择 <code>SSH and GPG keys</code>，再点击 <code>New SSH Key</code> 进行新建，将刚才得到的 <code>id_rsa.pub</code> 文件内容全部复制，粘贴在 <code>Key</code> 输入框内， <code>Title</code> 框为此 Key 的名称，可自己随意命名。完成后点击 <code>Add SSH Key</code> 完成添加。</p><p>添加完成后，可在命令行执行命令： <code>ssh -T git@github.com</code>，若出现类似如下输出，则此步骤完成。</p><pre class="highlight"><code class="console">C:\Users\paco&gt;ssh -T git@github.comHi RookiePC! You've successfully authenticated, but GitHub does not provide shell access.</code></pre><h2 id="安装-hexo"><a class="markdownIt-Anchor" href="#安装-hexo"></a> 安装 Hexo</h2><p>安装 Hexo 之前，需要先在电脑上安装 <code>Node.js</code>，进入<a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">官网</a>进行下载安装，在我个人的搭建中，我下载了 <code>Node.js 12.13.1</code>版本（因为它是一个LTS版本，不仅较为稳定，用户数也稍多，出现问题进行搜索时容易寻找到解决方案），下载解压至需要安装的路径（因为其直接在解压后的文件夹进行安装，所以建议<strong>不要丢在桌面</strong>），双击使用其中的<code>install_tools.bat</code>，根据提示安装。</p><p>安装完成后，推荐将其加入环境变量，方便后面使用 <code>npm</code> 命令。</p><p>使用如下命令安装 Hexo ：<code>npm install -g hexo-cli</code><br />安装完成后使用如下命令确认安装结果： <code>hexo -v</code>，若输出各组件版本情况则成功安装，若提示找不到命令 hexo，请查看安装过程中的提示信息进行重装。</p><h2 id="创建博客系统文件"><a class="markdownIt-Anchor" href="#创建博客系统文件"></a> 创建博客系统文件</h2><p>安装完成后，需要生成博客系统的文件，打开命令行，切换到想要保存博客相关文件的目录中，使用以下命令</p><pre class="highlight"><code class="">hexo init &lt;folder&gt;cd &lt;folder&gt;npm install</code></pre><ul><li>其中第一条命令为创建博客系统文件，第一条及第二条命令中 <code>&lt;folder&gt;</code> 为想要存放博客系统文件的目录名</li></ul><p>所有命令执行完成后，执行如下命令生成博客系统静态文件（即要托管到 GitHub Pages中的文件）并启动本地服务以进行预览:</p><pre class="highlight"><code class="">hexo generatehexo server</code></pre><ul><li>Hexo 命令可以简写，参数仅填写参数首字母即可，即上述命令分别可以 <code>hexo g</code> 及 <code>hexo s</code> 代替</li></ul><p>启动本地服务后，命令行会输出本地运行的端口，可通过浏览器进行预览。</p><h2 id="将博客文件部署到-github-pages中"><a class="markdownIt-Anchor" href="#将博客文件部署到-github-pages中"></a> 将博客文件部署到 GitHub Pages中</h2><p>根据提示关闭 本地预览服务，编辑博客根目录下的 <code>_config.yml</code> 文件（此为博客系统的配置文件），在文件中找到 <code>deploy</code>设置项，将其中设置内容更改为下述：</p><pre class="highlight"><code class="ini">deploy:tpye: gitrepository: git@github.com:&lt;user name&gt;/&lt;user name&gt;.github.io.gitbranch: master</code></pre><p>其中 <code>&lt;user name&gt;</code> 为你的 <code>GitHub ID</code>, <strong>注意大小写</strong>。</p><p>配置完成后，在命令行中（需要切换工作路径到 博客根目录下）执行命令：<code>npm install hexo-deployer-git --save</code> 以安装部署插件 <code>hexo-deployer-git</code></p><p>安装完成后，执行命令 <code>hexo g</code> 以生成静态文件，再执行 <code>hexo d</code> 将系统文件部署到GitHub，命令执行完成后即可完成部署。</p><p>在访问前需要在博客仓库的设置中，<code>GitHub Pages</code>项内设置 <code>Theme</code>，此项并不会修改博客系统的主题，但是若不设置，则访问个人博客始终404，选择之后，保存，稍等一段时间即可通过浏览器访问 <code>&lt;user name&gt;.github.com</code> 访问你的个人博客系统（此时可以不用管大小写）。</p><h1 id="修改域名部分"><a class="markdownIt-Anchor" href="#修改域名部分"></a> 修改域名部分</h1><p>如果想使用自己的域名，需要在博客仓库的设置中，填入自己的域名（需要事先购买，国内域名也需要实名注册）的地址，在 <code>GitHub Pages</code>项中的 <code>Custom domain</code> 中填入域名，并点击保存，保存完成后项目中将多出 <code>CNAME</code> 文件，其中就为我们保存的域名。</p><p>然后将博客的ip地址添加到域名解析中，博客的ip地址可通过命令行 <code>ping</code> 博客地址获得，如下输出:</p><pre class="highlight"><code class="console">C:\Users\paco&gt;ping rookiepc.github.ioPinging rookiepc.github.io [185.199.110.153] with 32 bytes of data:Reply from 185.199.110.153: bytes=32 time=8ms TTL=51Reply from 185.199.110.153: bytes=32 time=7ms TTL=51Reply from 185.199.110.153: bytes=32 time=8ms TTL=51Reply from 185.199.110.153: bytes=32 time=8ms TTL=51Ping statistics for 185.199.110.153:    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),Approximate round trip times in milli-seconds:    Minimum = 7ms, Maximum = 8ms, Average = 7ms</code></pre><p>添加解析完毕后等待一段时间就可以从你的域名访问博客了。</p><h1 id="美化部分"><a class="markdownIt-Anchor" href="#美化部分"></a> 美化部分</h1><h2 id="美化的理由"><a class="markdownIt-Anchor" href="#美化的理由"></a> 美化的理由</h2><p>Hexo 默认的主题说不上难看，但是也很难说它漂亮。</p><p>这里推荐 <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">Fluid</a>，里面也有提供两个示例的博客可以访问，可以先预览再决定是否使用。</p><p><img src="https://camo.githubusercontent.com/3f195c0139ff51ce5d6c16e5b2bb15baaf838cae/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f666c7569642d6465762f737461746963406d61737465722f6865786f2d7468656d652d666c7569642f73637265656e73686f74732f312e706e67" srcset="undefined" alt="Fluid预览" /></p><h2 id="前言-2"><a class="markdownIt-Anchor" href="#前言-2"></a> 前言</h2><p>以下对配置文件的修改，只有在重新生成静态文件、并将其部署到GitHub Pages才能生效。</p><h2 id="使用fluid主题"><a class="markdownIt-Anchor" href="#使用fluid主题"></a> 使用Fluid主题</h2><p>参考 <a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B" target="_blank" rel="noopener">Fluid–快速开始</a> 进行初始配置（依照快速开始小节所有内容配置完成就可以完成配置工作）</p><h2 id="定制博客页面顶部图片"><a class="markdownIt-Anchor" href="#定制博客页面顶部图片"></a> 定制博客页面顶部图片</h2><p>参考 <a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E9%A6%96%E9%A1%B5%E5%A4%A7%E5%9B%BE" target="_blank" rel="noopener">Fluid–首页大图</a> 进行设置，自己寻找图片素材就行。</p><h2 id="顶部菜单汉化"><a class="markdownIt-Anchor" href="#顶部菜单汉化"></a> 顶部菜单汉化</h2><p>参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E9%A1%B6%E9%83%A8%E8%8F%9C%E5%8D%95" target="_blank" rel="noopener">Fluid–顶部菜单</a></p><h2 id="博客名称设置"><a class="markdownIt-Anchor" href="#博客名称设置"></a> 博客名称设置</h2><p>参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E5%8D%9A%E5%AE%A2%E6%A0%87%E9%A2%98" target="_blank" rel="noopener">Fluid–博客标题</a></p><h2 id="首页展示语句"><a class="markdownIt-Anchor" href="#首页展示语句"></a> 首页展示语句</h2><p>参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#slogan-%E6%89%93%E5%AD%97%E6%9C%BA" target="_blank" rel="noopener">Fluid–Slogan</a></p><h2 id="更换数学公式渲染引擎根据需要"><a class="markdownIt-Anchor" href="#更换数学公式渲染引擎根据需要"></a> 更换数学公式渲染引擎（根据需要）</h2><p>参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#katex-%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F" target="_blank" rel="noopener">Fluid–KaTex数学公式</a></p><h2 id="接入gitalk评论插件"><a class="markdownIt-Anchor" href="#接入gitalk评论插件"></a> 接入Gitalk评论插件</h2><h3 id="简单介绍"><a class="markdownIt-Anchor" href="#简单介绍"></a> 简单介绍</h3><p>Hexo 博客系统需要通过插件形式才能引入评论系统，而Gitalk则是通过项目issue的方式来保存评论信息，比其他的第三方托管我觉得稍微好一丢丢，毕竟博客系统也在GitHub上嘛</p><h3 id="register-application"><a class="markdownIt-Anchor" href="#register-application"></a> Register Application</h3><p>首先在 <code>GitHub</code> 上注册新应用，点击<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">这里</a>，如下图所示，填写 <code>Application name</code>、<code>Homepage URL</code>、<code>Authorization callback URL</code>，其中注意后两项，请直接填写博客的github链接，如<code>https://&lt;yourname&gt;.github.io</code>，不要遗漏<code>https</code>，</p><p><img src="/img/blog_img/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/register_application_sample.png" srcset="undefined" alt="register_application_sample" /></p><p>填写完成后，点击注册，即跳转到如下页面，其中 <code>Client ID</code> 和 <code>Client Secret</code>后面都会用到。</p><p><img src="/img/blog_img/%E6%90%AD%E5%BB%BAHexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/application_client_id_sample.png" srcset="undefined" alt="application_client_id_sample" /></p><p>然后编辑 Fluid 主题的 <code>_config.yml</code> 文件，编辑如下：</p><pre class="highlight"><code class="ini">post:comments:enable: truetype: gitalk</code></pre><p>再找到如下关键字部分，填入<code>clientID</code>、<code>clientSecret</code>、 <code>repo</code>、<code>own</code>、<code>admin</code>，其中需要注意 <code>admin</code> 字段填写需要写入字符串数组，比如 <code>['RookiePC']</code>，不要填入双引号</p><pre class="highlight"><code class="ini">gitalk:  clientID:                     <span class="hljs-comment"># GitHub Application Client ID</span>  clientSecret:                 <span class="hljs-comment"># GitHub Application Client Secret</span>  repo:                         <span class="hljs-comment"># The repo to store comments</span>  owner:                        <span class="hljs-comment"># GitHub repository owner. Can be personal user or organization.</span>  admin:                       <span class="hljs-comment"># GitHub repo owner and collaborators, only these guys can initialize github issues, should be like "['admin']" or "['admin1','admin2']"</span></code></pre><p>完成配置文件编辑后保存，重新生成静态文件，再配置到GitHub Pages即可完成Gitalk评论插件的导入。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>